# -*- coding: utf-8 -*-

"""
/***************************************************************************
 ProgramacaoAplicadaGrupo1
                                 A QGIS plugin
 Solução do Grupo X
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                              -------------------
        begin                : 2023-03-20
        copyright            : (C) 2023 by Grupo 1
        email                : borba.philipe@ime.eb.br
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

__author__ = 'Grupo 1'
__date__ = '2023-03-20'
__copyright__ = '(C) 2023 by Grupo 1'

# This will get replaced with a git SHA1 when you do a git archive

__revision__ = '$Format:%H$'

import os
import sys
import inspect

from qgis.core import QgsProcessingAlgorithm, QgsApplication
from .programacao_aplicada_grupo_1_provider import ProgramacaoAplicadaGrupo1Provider

cmd_folder = os.path.split(inspect.getfile(inspect.currentframe()))[0]

if cmd_folder not in sys.path:
    sys.path.insert(0, cmd_folder)


class ProgramacaoAplicadaGrupo1Plugin(object):

    def __init__(self):
   # Inicialização da variável provider com valor nulo
        self.provider = None

    def initProcessing(self):
        """Init Processing provider for QGIS >= 3.8."""
   # Criação de uma instância do provider ProgramacaoAplicadaGrupo1Provider
        self.provider = ProgramacaoAplicadaGrupo1Provider()
   # Adição do provider ao registro de providers do Processing do QGIS
        QgsApplication.processingRegistry().addProvider(self.provider)

    def initGui(self):
   # Chama o método initProcessing para registrar o provider no Processing do QGIS
        self.initProcessing()

    def unload(self):
   # Remove o provider do registro de providers do Processing do QGIS
        QgsApplication.processingRegistry().removeProvider(self.provider)
